{"uid":"53180b886ea45e5f","name":"test_full_cluster_restart[SIGKILL-/snap/charmed-postgresql/[0-9]*/usr/bin/patroni]","fullName":"tests.integration.ha_tests.test_self_healing#test_full_cluster_restart","historyId":"bc079a669521a660f5a86415d1c5b102","time":{"start":1710986452881,"stop":1710986499704,"duration":46823},"description":"This tests checks that a cluster recovers from a full cluster restart.\n\n    The test can be called a full cluster crash when the signal sent to the OS process\n    is SIGKILL.\n    ","descriptionHtml":"<p>This tests checks that a cluster recovers from a full cluster restart.</p>\n<pre><code>The test can be called a full cluster crash when the signal sent to the OS process\nis SIGKILL.\n</code></pre>\n","status":"failed","statusMessage":"AssertionError: members report different lists of cluster members.","statusTrace":"Traceback (most recent call last):\n  File \"/home/runner/work/postgresql-operator/postgresql-operator/.tox/integration/lib/python3.10/site-packages/_pytest/runner.py\", line 340, in from_call\n    result: Optional[TResult] = func()\n  File \"/home/runner/work/postgresql-operator/postgresql-operator/.tox/integration/lib/python3.10/site-packages/_pytest/runner.py\", line 240, in <lambda>\n    lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise\n  File \"/home/runner/work/postgresql-operator/postgresql-operator/.tox/integration/lib/python3.10/site-packages/pluggy/_hooks.py\", line 501, in __call__\n    return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)\n  File \"/home/runner/work/postgresql-operator/postgresql-operator/.tox/integration/lib/python3.10/site-packages/pluggy/_manager.py\", line 119, in _hookexec\n    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)\n  File \"/home/runner/work/postgresql-operator/postgresql-operator/.tox/integration/lib/python3.10/site-packages/pluggy/_callers.py\", line 181, in _multicall\n    return outcome.get_result()\n  File \"/home/runner/work/postgresql-operator/postgresql-operator/.tox/integration/lib/python3.10/site-packages/pluggy/_result.py\", line 99, in get_result\n    raise exc.with_traceback(exc.__traceback__)\n  File \"/home/runner/work/postgresql-operator/postgresql-operator/.tox/integration/lib/python3.10/site-packages/pluggy/_callers.py\", line 166, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/home/runner/work/postgresql-operator/postgresql-operator/.tox/integration/lib/python3.10/site-packages/_pytest/threadexception.py\", line 87, in pytest_runtest_call\n    yield from thread_exception_runtest_hook()\n  File \"/home/runner/work/postgresql-operator/postgresql-operator/.tox/integration/lib/python3.10/site-packages/_pytest/threadexception.py\", line 63, in thread_exception_runtest_hook\n    yield\n  File \"/home/runner/work/postgresql-operator/postgresql-operator/.tox/integration/lib/python3.10/site-packages/pluggy/_callers.py\", line 166, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/home/runner/work/postgresql-operator/postgresql-operator/.tox/integration/lib/python3.10/site-packages/_pytest/unraisableexception.py\", line 90, in pytest_runtest_call\n    yield from unraisable_exception_runtest_hook()\n  File \"/home/runner/work/postgresql-operator/postgresql-operator/.tox/integration/lib/python3.10/site-packages/_pytest/unraisableexception.py\", line 65, in unraisable_exception_runtest_hook\n    yield\n  File \"/home/runner/work/postgresql-operator/postgresql-operator/.tox/integration/lib/python3.10/site-packages/pluggy/_callers.py\", line 166, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/home/runner/work/postgresql-operator/postgresql-operator/.tox/integration/lib/python3.10/site-packages/_pytest/logging.py\", line 849, in pytest_runtest_call\n    yield from self._runtest_for(item, \"call\")\n  File \"/home/runner/work/postgresql-operator/postgresql-operator/.tox/integration/lib/python3.10/site-packages/_pytest/logging.py\", line 832, in _runtest_for\n    yield\n  File \"/home/runner/work/postgresql-operator/postgresql-operator/.tox/integration/lib/python3.10/site-packages/pluggy/_callers.py\", line 166, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/home/runner/work/postgresql-operator/postgresql-operator/.tox/integration/lib/python3.10/site-packages/_pytest/capture.py\", line 883, in pytest_runtest_call\n    return (yield)\n  File \"/home/runner/work/postgresql-operator/postgresql-operator/.tox/integration/lib/python3.10/site-packages/pluggy/_callers.py\", line 166, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/home/runner/work/postgresql-operator/postgresql-operator/.tox/integration/lib/python3.10/site-packages/_pytest/skipping.py\", line 256, in pytest_runtest_call\n    return (yield)\n  File \"/home/runner/work/postgresql-operator/postgresql-operator/.tox/integration/lib/python3.10/site-packages/pluggy/_callers.py\", line 102, in _multicall\n    res = hook_impl.function(*args)\n  File \"/home/runner/work/postgresql-operator/postgresql-operator/.tox/integration/lib/python3.10/site-packages/_pytest/runner.py\", line 182, in pytest_runtest_call\n    raise e\n  File \"/home/runner/work/postgresql-operator/postgresql-operator/.tox/integration/lib/python3.10/site-packages/_pytest/runner.py\", line 172, in pytest_runtest_call\n    item.runtest()\n  File \"/home/runner/work/postgresql-operator/postgresql-operator/.tox/integration/lib/python3.10/site-packages/_pytest/python.py\", line 1772, in runtest\n    self.ihook.pytest_pyfunc_call(pyfuncitem=self)\n  File \"/home/runner/work/postgresql-operator/postgresql-operator/.tox/integration/lib/python3.10/site-packages/pluggy/_hooks.py\", line 501, in __call__\n    return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)\n  File \"/home/runner/work/postgresql-operator/postgresql-operator/.tox/integration/lib/python3.10/site-packages/pluggy/_manager.py\", line 119, in _hookexec\n    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)\n  File \"/home/runner/work/postgresql-operator/postgresql-operator/.tox/integration/lib/python3.10/site-packages/pluggy/_callers.py\", line 181, in _multicall\n    return outcome.get_result()\n  File \"/home/runner/work/postgresql-operator/postgresql-operator/.tox/integration/lib/python3.10/site-packages/pluggy/_result.py\", line 99, in get_result\n    raise exc.with_traceback(exc.__traceback__)\n  File \"/home/runner/work/postgresql-operator/postgresql-operator/.tox/integration/lib/python3.10/site-packages/pluggy/_callers.py\", line 102, in _multicall\n    res = hook_impl.function(*args)\n  File \"/home/runner/work/postgresql-operator/postgresql-operator/.tox/integration/lib/python3.10/site-packages/_pytest/python.py\", line 195, in pytest_pyfunc_call\n    result = testfunction(**testargs)\n  File \"/home/runner/work/postgresql-operator/postgresql-operator/.tox/integration/lib/python3.10/site-packages/pytest_asyncio/plugin.py\", line 532, in inner\n    _loop.run_until_complete(task)\n  File \"/usr/lib/python3.10/asyncio/base_events.py\", line 649, in run_until_complete\n    return future.result()\n  File \"/home/runner/work/postgresql-operator/postgresql-operator/tests/integration/ha_tests/test_self_healing.py\", line 297, in test_full_cluster_restart\n    member_ips = await fetch_cluster_members(ops_test)\n  File \"/home/runner/work/postgresql-operator/postgresql-operator/tests/integration/ha_tests/helpers.py\", line 314, in fetch_cluster_members\n    assert member_ips == {\nAssertionError: members report different lists of cluster members.","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"ops_test","time":{"start":1710984586716,"stop":1710984586849,"duration":133},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"event_loop","time":{"start":1710984586716,"stop":1710984586716,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"tmp_path_factory","time":{"start":1710984586716,"stop":1710984586716,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"abort_on_fail","time":{"start":1710986444544,"stop":1710986444545,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"reset_restart_condition","time":{"start":1710986444545,"stop":1710986451837,"duration":7292},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"continuous_writes","time":{"start":1710986444545,"stop":1710986444545,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"loop_wait","time":{"start":1710986451837,"stop":1710986452880,"duration":1043},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"loop_wait::finalizer","time":{"start":1710986499708,"stop":1710986499788,"duration":80},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"reset_restart_condition::finalizer","time":{"start":1710986499789,"stop":1710986510155,"duration":10366},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"continuous_writes::finalizer","time":{"start":1710986510155,"stop":1710986516201,"duration":6046},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"abort_on_fail::0","time":{"start":1710986516202,"stop":1710986516202,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"ops_test::finalizer","time":{"start":1710987334726,"stop":1710987335268,"duration":542},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"event_loop::2","time":{"start":1710987335269,"stop":1710987335271,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"event_loop::_close_event_loop","time":{"start":1710987335271,"stop":1710987335271,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"event_loop::_provide_clean_event_loop","time":{"start":1710987335272,"stop":1710987335272,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"group(1)"},{"name":"tag","value":"asyncio"},{"name":"parentSuite","value":"tests.integration.ha_tests"},{"name":"suite","value":"test_self_healing"},{"name":"host","value":"fv-az1019-297"},{"name":"thread","value":"7144-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.integration.ha_tests.test_self_healing"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"process","value":"'/snap/charmed-postgresql/[0-9]*/usr/bin/patroni'"},{"name":"signal","value":"'SIGKILL'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":2,"broken":3,"skipped":0,"passed":32,"unknown":0,"total":37},"items":[{"uid":"6e93115fbf4139b7","reportUrl":"../2259//#testresult/6e93115fbf4139b7","status":"passed","time":{"start":1710900964467,"stop":1710901012974,"duration":48507}},{"uid":"dd5f339bc8f7acae","reportUrl":"../2257//#testresult/dd5f339bc8f7acae","status":"passed","time":{"start":1710813515672,"stop":1710813554537,"duration":38865}},{"uid":"e4ccd205335cc98d","reportUrl":"../2239//#testresult/e4ccd205335cc98d","status":"passed","time":{"start":1710640620795,"stop":1710640658319,"duration":37524}},{"uid":"a9d2b7acc4c174b3","reportUrl":"../2234//#testresult/a9d2b7acc4c174b3","status":"passed","time":{"start":1710556186289,"stop":1710556219065,"duration":32776}},{"uid":"b4103d4af05c3c1","reportUrl":"../2229//#testresult/b4103d4af05c3c1","status":"passed","time":{"start":1710468006491,"stop":1710468042439,"duration":35948}},{"uid":"119f51cf30768b9a","reportUrl":"../2210//#testresult/119f51cf30768b9a","status":"passed","time":{"start":1710296072957,"stop":1710296106020,"duration":33063}},{"uid":"2600a0308fc93f65","reportUrl":"../2189//#testresult/2600a0308fc93f65","status":"passed","time":{"start":1710122734024,"stop":1710122774592,"duration":40568}},{"uid":"5527f3a5764b5182","reportUrl":"../2185//#testresult/5527f3a5764b5182","status":"passed","time":{"start":1710035966725,"stop":1710036003092,"duration":36367}},{"uid":"da83b5697436639d","reportUrl":"../2181//#testresult/da83b5697436639d","status":"passed","time":{"start":1709949248399,"stop":1709949282421,"duration":34022}},{"uid":"1f15da70892b8875","reportUrl":"../2169//#testresult/1f15da70892b8875","status":"passed","time":{"start":1709863073086,"stop":1709863107353,"duration":34267}},{"uid":"9000f2e30e2a28f9","reportUrl":"../2084//#testresult/9000f2e30e2a28f9","status":"passed","time":{"start":1709085734480,"stop":1709085788670,"duration":54190}},{"uid":"477b5597b2be3d16","reportUrl":"../2075//#testresult/477b5597b2be3d16","status":"passed","time":{"start":1709004348569,"stop":1709004404383,"duration":55814}},{"uid":"71e2046ba0c946f8","reportUrl":"../2061//#testresult/71e2046ba0c946f8","status":"passed","time":{"start":1708741725677,"stop":1708741809928,"duration":84251}},{"uid":"e65afb0531a25c2e","reportUrl":"../2055//#testresult/e65afb0531a25c2e","status":"passed","time":{"start":1708654926674,"stop":1708654987308,"duration":60634}},{"uid":"29a881e841a52f3e","reportUrl":"../2032//#testresult/29a881e841a52f3e","status":"passed","time":{"start":1708482099045,"stop":1708482207636,"duration":108591}},{"uid":"fc521494eed4b55d","reportUrl":"../2027//#testresult/fc521494eed4b55d","status":"passed","time":{"start":1708396504618,"stop":1708396675519,"duration":170901}},{"uid":"7211a87f51ba57b5","reportUrl":"../2025//#testresult/7211a87f51ba57b5","status":"passed","time":{"start":1708310063774,"stop":1708310524602,"duration":460828}},{"uid":"9047eff7eb11e8a2","reportUrl":"../2019//#testresult/9047eff7eb11e8a2","status":"passed","time":{"start":1708136429871,"stop":1708136543857,"duration":113986}},{"uid":"4b41d0dec500f4e9","reportUrl":"../2013//#testresult/4b41d0dec500f4e9","status":"passed","time":{"start":1708050957176,"stop":1708051016802,"duration":59626}},{"uid":"5300a81823adbf5a","reportUrl":"../2008//#testresult/5300a81823adbf5a","status":"broken","statusDetails":"Exception: ('Expected command %s to succeed instead it failed: %s', 'systemctl start snap.charmed-postgresql.patroni.service', 1)","time":{"start":1707964500683,"stop":1707965012256,"duration":511573}}]},"tags":["asyncio","group(1)"]},"source":"53180b886ea45e5f.json","parameterValues":["'/snap/charmed-postgresql/[0-9]*/usr/bin/patroni'","'SIGKILL'"]}